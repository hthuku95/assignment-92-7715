content='"""\nPayments Django App Package\n\nThis package handles all payment-related functionality for the e-commerce platform,\nincluding Stripe integration, payment processing, and transaction management.\n"""\n\nimport logging\nfrom django.apps import AppConfig\n\nlogger = logging.getLogger(__name__)\n\n# Version information\n__version__ = \'1.0.0\'\n__author__ = \'E-commerce Platform Team\'\n\n# Package metadata\ndefault_app_config = \'payments.apps.PaymentsConfig\'\n\n# Payment status constants\nPAYMENT_STATUS_PENDING = \'pending\'\nPAYMENT_STATUS_PROCESSING = \'processing\'\nPAYMENT_STATUS_COMPLETED = \'completed\'\nPAYMENT_STATUS_FAILED = \'failed\'\nPAYMENT_STATUS_CANCELLED = \'cancelled\'\nPAYMENT_STATUS_REFUNDED = \'refunded\'\n\nPAYMENT_STATUSES = [\n    (PAYMENT_STATUS_PENDING, \'Pending\'),\n    (PAYMENT_STATUS_PROCESSING, \'Processing\'),\n    (PAYMENT_STATUS_COMPLETED, \'Completed\'),\n    (PAYMENT_STATUS_FAILED, \'Failed\'),\n    (PAYMENT_STATUS_CANCELLED, \'Cancelled\'),\n    (PAYMENT_STATUS_REFUNDED, \'Refunded\'),\n]\n\n# Payment method constants\nPAYMENT_METHOD_STRIPE = \'stripe\'\nPAYMENT_METHOD_PAYPAL = \'paypal\'\nPAYMENT_METHOD_BANK_TRANSFER = \'bank_transfer\'\n\nPAYMENT_METHODS = [\n    (PAYMENT_METHOD_STRIPE, \'Stripe\'),\n    (PAYMENT_METHOD_PAYPAL, \'PayPal\'),\n    (PAYMENT_METHOD_BANK_TRANSFER, \'Bank Transfer\'),\n]\n\n# Currency constants\nCURRENCY_USD = \'USD\'\nCURRENCY_EUR = \'EUR\'\nCURRENCY_GBP = \'GBP\'\n\nSUPPORTED_CURRENCIES = [\n    (CURRENCY_USD, \'US Dollar\'),\n    (CURRENCY_EUR, \'Euro\'),\n    (CURRENCY_GBP, \'British Pound\'),\n]\n\n# Transaction type constants\nTRANSACTION_TYPE_PAYMENT = \'payment\'\nTRANSACTION_TYPE_REFUND = \'refund\'\nTRANSACTION_TYPE_CHARGEBACK = \'chargeback\'\n\nTRANSACTION_TYPES = [\n    (TRANSACTION_TYPE_PAYMENT, \'Payment\'),\n    (TRANSACTION_TYPE_REFUND, \'Refund\'),\n    (TRANSACTION_TYPE_CHARGEBACK, \'Chargeback\'),\n]\n\n# Error codes\nPAYMENT_ERROR_INSUFFICIENT_FUNDS = \'insufficient_funds\'\nPAYMENT_ERROR_INVALID_CARD = \'invalid_card\'\nPAYMENT_ERROR_EXPIRED_CARD = \'expired_card\'\nPAYMENT_ERROR_DECLINED = \'declined\'\nPAYMENT_ERROR_PROCESSING = \'processing_error\'\nPAYMENT_ERROR_NETWORK = \'network_error\'\n\nPAYMENT_ERROR_CODES = [\n    (PAYMENT_ERROR_INSUFFICIENT_FUNDS, \'Insufficient Funds\'),\n    (PAYMENT_ERROR_INVALID_CARD, \'Invalid Card\'),\n    (PAYMENT_ERROR_EXPIRED_CARD, \'Expired Card\'),\n    (PAYMENT_ERROR_DECLINED, \'Transaction Declined\'),\n    (PAYMENT_ERROR_PROCESSING, \'Processing Error\'),\n    (PAYMENT_ERROR_NETWORK, \'Network Error\'),\n]\n\ndef get_payment_status_display(status):\n    """\n    Get the display name for a payment status.\n    \n    Args:\n        status (str): The payment status code\n        \n    Returns:\n        str: The display name for the status\n    """\n    status_dict = dict(PAYMENT_STATUSES)\n    return status_dict.get(status, status.title())\n\ndef get_payment_method_display(method):\n    """\n    Get the display name for a payment method.\n    \n    Args:\n        method (str): The payment method code\n        \n    Returns:\n        str: The display name for the method\n    """\n    method_dict = dict(PAYMENT_METHODS)\n    return method_dict.get(method, method.title())\n\ndef get' additional_kwargs={} response_metadata={'id': 'msg_016Qmr8bAZz7bZqxYWwebVrX', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 400, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--9b4556c8-38de-4b00-b647-4e433fb7cc9d-0' usage_metadata={'input_tokens': 400, 'output_tokens': 1024, 'total_tokens': 1424, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}