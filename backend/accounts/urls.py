content="from django.urls import path, include\nfrom django.contrib.auth import views as auth_views\nfrom rest_framework.routers import DefaultRouter\nfrom rest_framework_simplejwt.views import (\n    TokenObtainPairView,\n    TokenRefreshView,\n    TokenVerifyView,\n)\nfrom . import views\n\napp_name = 'accounts'\n\n# Create router for ViewSets\nrouter = DefaultRouter()\nrouter.register(r'profile', views.UserProfileViewSet, basename='profile')\n\nurlpatterns = [\n    # Authentication endpoints\n    path('register/', views.RegisterView.as_view(), name='register'),\n    path('login/', views.LoginView.as_view(), name='login'),\n    path('logout/', views.LogoutView.as_view(), name='logout'),\n    path('logout-all/', views.LogoutAllView.as_view(), name='logout_all'),\n    \n    # JWT Token endpoints\n    path('token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n    path('token/verify/', TokenVerifyView.as_view(), name='token_verify'),\n    \n    # Password management\n    path('password/change/', views.ChangePasswordView.as_view(), name='password_change'),\n    path('password/reset/', views.PasswordResetView.as_view(), name='password_reset'),\n    path('password/reset/confirm/<uidb64>/<token>/', \n         views.PasswordResetConfirmView.as_view(), name='password_reset_confirm'),\n    \n    # Email verification\n    path('email/verify/', views.EmailVerificationView.as_view(), name='email_verify'),\n    path('email/verify/confirm/<uidb64>/<token>/', \n         views.EmailVerificationConfirmView.as_view(), name='email_verify_confirm'),\n    path('email/resend-verification/', \n         views.ResendEmailVerificationView.as_view(), name='resend_email_verification'),\n    \n    # User management\n    path('user/', views.UserDetailView.as_view(), name='user_detail'),\n    path('user/update/', views.UserUpdateView.as_view(), name='user_update'),\n    path('user/delete/', views.UserDeleteView.as_view(), name='user_delete'),\n    \n    # Two-factor authentication\n    path('2fa/setup/', views.TwoFactorSetupView.as_view(), name='2fa_setup'),\n    path('2fa/verify/', views.TwoFactorVerifyView.as_view(), name='2fa_verify'),\n    path('2fa/disable/', views.TwoFactorDisableView.as_view(), name='2fa_disable'),\n    path('2fa/backup-codes/', views.BackupCodesView.as_view(), name='backup_codes'),\n    \n    # Social authentication (if using django-allauth)\n    path('social/', include('allauth.urls')),\n    \n    # User preferences and settings\n    path('preferences/', views.UserPreferencesView.as_view(), name='preferences'),\n    path('notifications/settings/', \n         views.NotificationSettingsView.as_view(), name='notification_settings'),\n    \n    # Account security\n    path('security/sessions/', views.ActiveSessionsView.as_view(), name='active_sessions'),\n    path('security/sessions/<int:session_id>/revoke/', \n         views.RevokeSessionView.as_view(), name='revoke_session'),\n    path('security/login-history/', views.LoginHistoryView.as_view(), name='login_history'),\n    \n    # Account verification and status\n    path('verify-account/', views.AccountVerificationView.as_view(), name='account_verification'),\n    path('account-status/', views.AccountStatusView.as_view(), name='account_status'),\n    \n    # Admin endpoints (for staff users)\n    path('admin/users/', views.AdminUserListView.as_view(), name='admin_user_list'),\n    path('admin/users/<int:user_id>/', views.AdminUserDetailView.as_view(), name='" additional_kwargs={} response_metadata={'id': 'msg_019UsE4dcqneTkNwBnazeJ9K', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 398, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--3dd3a9fd-9f5f-40ad-a769-01bdb7ce7f8f-0' usage_metadata={'input_tokens': 398, 'output_tokens': 1024, 'total_tokens': 1422, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}